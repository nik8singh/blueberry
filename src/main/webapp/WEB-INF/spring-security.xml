<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <!-- Application entry point which will redirect to login if user is not authenticated -->
    <beans:bean id="myBasicAuthenticationEntryPoint" class="com.mana.spring.web.auth.HttpAuthenticationEntryPoint"/>

    <!--    &lt;!&ndash; if user authentication is successful then AppSuccessHandler will redirect to page based on role&ndash;&gt;-->
    <beans:bean id="successHandler" class="com.mana.spring.web.auth.AuthSuccessHandler"/>

<!--    <beans:bean id="failureHandler" class="com.mana.spring.web.auth.AuthFailureHandler"/>-->
    <!--    <beans:bean id="corsHandler" class="com.mana.spring.filter.CORSFilter" />-->

    <!-- Without login below url can be accessed and they are public,hence security is none -->
    <http pattern="/*/vis/**" security="none"/>
    <http pattern="/*/register/**" security="none"/>

    <http use-expressions="true" auto-config="true">
        <!--        <http-basic entry-point-ref="myBasicAuthenticationEntryPoint"/>-->
        <!--        <intercept-url pattern="/*/cus/**" access="hasAnyRole('ROLE_CUSTOMER','ROLE_ADMIN')"/>-->
        <intercept-url pattern="/*/cus/**" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/*/adm/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="permitAll"/>
        <csrf disabled="true"/>
        <!--        default-target-url="/auth/login-success"-->
        <form-login
                login-page="/auth/login"
                authentication-success-handler-ref="successHandler"
                login-processing-url="/secureLogin"
                authentication-failure-url="/auth/accessdenied"
                username-parameter="username"
                password-parameter="password"/>
        <custom-filter after="BASIC_AUTH_FILTER" ref="tokenFilter"/>
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userService">
            <password-encoder ref="bCryptPasswordEncoder"/>
        </authentication-provider>

    </authentication-manager>

    <beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    </beans:bean>

    <beans:bean id="noOpPasswordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>

    <beans:bean id="tokenFilter" class="com.mana.spring.filter.JWTAuthorizationFilter"/>

</beans:beans>